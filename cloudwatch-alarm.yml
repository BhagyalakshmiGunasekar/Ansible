- name: create CPUUtilAlarm
  hosts: all
  become: True
  gather_facts: False
  tasks:
     - name: Gather EC2 instance metadata
       action: ec2_facts
     - name: Obtain EC2 tags for this instance
       local_action:
         module: ec2_tag
         region: "{{ ansible_ec2_placement_region }}"
         resource: "{{ ansible_ec2_instance_id }}"
         state: list
     #- name: Get Instance ID
       #shell: EC2_INSTANCE_ID="`wget -q -O - http://169.254.169.254/latest/meta-data/instance-id`"
     - name: CPU Alarm
       ec2_metric_alarm:
         state: present
         region: "{{ region }}"
         name: "cpu-util {{ resource }}"
         metric: "CPUUtilization"
         namespace: "AWS/EC2"
         statistic: Average
         comparison: ">="
         threshold: 8.5
         period: 300
         evaluation_periods: 3
         unit: "Percent"
         description: "This will alarm when instance cpu usage is greater than 85% for 15 minutes "
         dimensions: {'InstanceId': "{{ resource }}" }
         alarm_actions: ["arn:aws:sns:us-west-2:641434276274:Logging-rInstanceAlarmTopic-MINIPSHEPMCM"]
         
     - name: Status Failed
       ec2_metric_alarm:
         state: present
         region: us-west-2
         name: "status-failed{{EC2_INSTANCE_ID}}"
         metric: "StatusCheckFailed"
         namespace: "AWS/EC2"
         statistic: Minimum
         comparison: ">"
         threshold: 0
         period: 60
         evaluation_periods: 3
         unit: "Percent"
         description: "This will alarm when instance status check fails"
         dimensions: {'InstanceId': "{{ EC2_INSTANCE_ID }}" }
         alarm_actions: ["arn:aws:sns:us-west-2:641434276274:Logging-rInstanceAlarmTopic-MINIPSHEPMCM"]
